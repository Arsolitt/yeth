name: Release Binaries

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive: tar.gz

          # Linux x86_64 (musl - static build)
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            archive: tar.gz

          # Linux aarch64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            archive: tar.gz

          # macOS x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            archive: tar.gz

          # macOS ARM64
          - os: macos-latest
            target: aarch64-apple-darwin
            archive: tar.gz

          # Windows x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools (Linux ARM64)
        if: matrix.os == 'ubuntu-latest' && matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Install musl tools (Linux musl)
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Configure linker for ARM64
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          mkdir -p .cargo
          cat >> .cargo/config.toml << EOF
          [target.aarch64-unknown-linux-gnu]
          linker = "aarch64-linux-gnu-gcc"
          EOF

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Strip binary (Linux and macOS)
        if: matrix.os != 'windows-latest'
        run: |
          if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
            aarch64-linux-gnu-strip target/${{ matrix.target }}/release/yeth
          elif [ "${{ matrix.target }}" != "x86_64-unknown-linux-musl" ]; then
            strip target/${{ matrix.target }}/release/yeth
          fi

      - name: Create archive (Unix)
        if: matrix.archive == 'tar.gz'
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ../../../yeth-${{ matrix.target }}.tar.gz yeth
          cd ../../..

      - name: Create archive (Windows)
        if: matrix.archive == 'zip'
        shell: pwsh
        run: |
          cd target/${{ matrix.target }}/release
          Compress-Archive -Path yeth.exe -DestinationPath ../../../yeth-${{ matrix.target }}.zip
          cd ../../..

      - name: Generate checksums (Unix)
        if: matrix.archive == 'tar.gz'
        run: |
          sha256sum yeth-${{ matrix.target }}.tar.gz > yeth-${{ matrix.target }}.tar.gz.sha256

      - name: Generate checksums (Windows)
        if: matrix.archive == 'zip'
        shell: pwsh
        run: |
          $hash = (Get-FileHash yeth-${{ matrix.target }}.zip -Algorithm SHA256).Hash.ToLower()
          "$hash  yeth-${{ matrix.target }}.zip" | Out-File -Encoding ascii yeth-${{ matrix.target }}.zip.sha256

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            yeth-${{ matrix.target }}.${{ matrix.archive }}
            yeth-${{ matrix.target }}.${{ matrix.archive }}.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: yeth-${{ matrix.target }}
          path: |
            yeth-${{ matrix.target }}.${{ matrix.archive }}
            yeth-${{ matrix.target }}.${{ matrix.archive }}.sha256
          retention-days: 7
